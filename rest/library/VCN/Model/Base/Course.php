<?php /*
The Virtual Career Network (VCN) is an "open source, open content" workforce services and online learning delivery platform built and operated by the American Association of Community Colleges (AACC) under a grant from the Employment and Training Administration (ETA) of the United States Department of Labor (DOL).

Copyright (C) 2012 American Association of Community Colleges

This file is part of the source code for the Virtual Career Network.

The Virtual Career Network is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

The Virtual Career Network is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program.  If not, see http://www.gnu.org/licenses/.
*/ ?>

<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('VCN_Model_Course', 'doctrine');

/**
 * VCN_Model_Base_VcnCourse
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $COURSE_ID
 * @property string $COURSE_CODE
 * @property string $COURSE_TITLE
 * @property string $UNITID
 * @property integer $COURSE_TYPE
 * @property string $COURSE_LEVEL
 * @property string $DESCRIPTION
 * @property string $DURATION
 * @property string $VERSION
 * @property integer $BASE_COURSE_ID
 * @property integer $SUBJECT_AREA
 * @property integer $DELIVERY_MODE
 * @property string $LANGUAGE_CODE
 * @property string $COURSE_INFO_URL
 * @property integer $COURSE_INFO_URL_FLAG
 * @property string $ONLINE_COURSE_URL
 * @property integer $ONLINE_COURSE_URL_FLAG
 * @property float $TUTION_IN_STATE
 * @property float $TUTION_OUT_STATE
 * @property integer $TOTAL_CREDITS
 * @property string $ACCREDITED_YN
 * @property string $COMING_SOON_YN
 * @property string $ACTIVE_YN
 * @property integer $CREATED_BY
 * @property timestamp $CREATED_TIME
 * @property integer $UPDATED_BY
 * @property timestamp $UPDATED_TIME
 * @property Doctrine_Collection $VcnCourse
 * @property VCN_Model_VcnCourseType $VcnCourseType
 * @property VCN_Model_VcnCourseDeliveryMode $VcnCourseDeliveryMode
 * @property VCN_Model_VcnLanguage $VcnLanguage
 * @property VCN_Model_VcnSubjectArea $VcnSubjectArea
 * @property VCN_Model_VcnProvider $VcnProvider
 * @property Doctrine_Collection $VcnCmaUserCourse
 * @property Doctrine_Collection $VcnCourseAccessibility
 * @property Doctrine_Collection $VcnCourseAccreditor
 * @property Doctrine_Collection $VcnCourseCipcode
 * @property Doctrine_Collection $VcnCourseContact
 * @property Doctrine_Collection $VcnCourseOnetcode
 * @property Doctrine_Collection $VcnCoursePrerequisite
 * @property Doctrine_Collection $VcnCoursePrerequisite_2
 * @property Doctrine_Collection $VcnProgramCourseReq
 * @property Doctrine_Collection $VcnProviderCourseReq
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class VCN_Model_Base_Course extends VCN_DoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vcn_course');
        $this->hasColumn('COURSE_ID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('COURSE_CODE', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('COURSE_TITLE', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('UNITID', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('COURSE_TYPE', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('COURSE_LEVEL', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DESCRIPTION', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DURATION', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('VERSION', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('BASE_COURSE_ID', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('SUBJECT_AREA', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('DELIVERY_MODE', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('LANGUAGE_CODE', 'string', 3, array(
             'type' => 'string',
             'length' => 3,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('COURSE_INFO_URL', 'string', 300, array(
             'type' => 'string',
             'length' => 300,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('COURSE_INFO_URL_FLAG', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ONLINE_COURSE_URL', 'string', 300, array(
             'type' => 'string',
             'length' => 300,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ONLINE_COURSE_URL_FLAG', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TUTION_IN_STATE', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TUTION_OUT_STATE', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('TOTAL_CREDITS', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ACCREDITED_YN', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('COMING_SOON_YN', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'default' => 'N',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('ACTIVE_YN', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CREATED_BY', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('CREATED_TIME', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('UPDATED_BY', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('UPDATED_TIME', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
     	$this->hasOne('VCN_Model_Provider as Provider', array(
             'local' => 'UNITID',
             'foreign' => 'UNITID'));

        $this->hasMany('VCN_Model_CourseAccreditor as CourseAccreditor', array(
             'local' => 'COURSE_ID',
             'foreign' => 'COURSE_ID'));
        $this->hasMany('VCN_Model_CourseCipcode as CourseCipcode', array(
             'local' => 'COURSE_ID',
             'foreign' => 'COURSE_ID'));
         $this->hasOne('VCN_Model_CourseType as Type', array(
             'local' => 'COURSE_TYPE',
             'foreign' => 'COURSE_TYPE'));

        $this->hasOne('VCN_Model_CourseDeliveryMode as CourseDeliveryMode', array(
             'local' => 'DELIVERY_MODE',
             'foreign' => 'DELIVERY_MODE'));

        $this->hasOne('VCN_Model_Language as Language', array(
             'local' => 'LANGUAGE_CODE',
             'foreign' => 'LANGUAGE_CODE'));

        $this->hasOne('VCN_Model_SubjectArea as Subject', array(
             'local' => 'SUBJECT_AREA',
             'foreign' => 'SUBJECT_AREA'));

   //     $this->hasMany('VCN_Model_CmaUserCourse as UserCourse', array(
 //            'local' => 'COURSE_ID',
  //           'foreign' => 'COURSE_ID'));
 
        $this->hasMany('VCN_Model_CourseAccessibility as Accessibility', array(
             'local' => 'COURSE_ID',
             'foreign' => 'COURSE_ID'));

        $this->hasMany('VCN_Model_CourseCipcode as Cipcode', array(
             'local' => 'COURSE_ID',
             'foreign' => 'COURSE_ID'));

        $this->hasMany('VCN_Model_CourseContact as Contact', array(
             'local' => 'COURSE_ID',
             'foreign' => 'COURSE_ID'));

        $this->hasMany('VCN_Model_CourseKeyword as Keywords', array(
             'local' => 'COURSE_ID',
             'foreign' => 'COURSE_ID'));

        $this->hasMany('VCN_Model_CourseOnetcode as CourseOnetcode', array(
             'local' => 'COURSE_ID',
             'foreign' => 'COURSE_ID'));

        $this->hasMany('VCN_Model_ProgramCourseReq as ProgramCourseReq', array(
             'local' => 'COURSE_ID',
             'foreign' => 'COURSE_ID'));
     }
}